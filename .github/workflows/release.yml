name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## Changes in this Release
            
            ### Features
            - AWS service tunneling through Kubernetes
            - Interactive service and instance selection
            - Automatic AWS Secrets Manager integration
            - Smart port management
            
            ### Installation
            
            #### Homebrew
            ```bash
            brew tap dnd-it/tamedia-tools
            brew install tamedia-tools
            ```
            
            #### Direct Installation
            ```bash
            curl -sSL https://raw.githubusercontent.com/dnd-it/tamedia-tools/main/scripts/install.sh | bash
            ```
            
            ### Tools Included
            - `tamedia-tunnel` - AWS service tunneling through Kubernetes
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build release tarball
        run: |
          VERSION="${{ needs.create-release.outputs.version }}"
          RELEASE_DIR="tamedia-tools-${VERSION}"
          
          # Create release directory
          mkdir -p "${RELEASE_DIR}"
          
          # Copy all necessary files
          cp -r tools scripts Formula completion docs README.md LICENSE "${RELEASE_DIR}/"
          
          # Create tarball
          tar -czf "${RELEASE_DIR}.tar.gz" "${RELEASE_DIR}"
          
          # Calculate SHA256
          SHA256=$(shasum -a 256 "${RELEASE_DIR}.tar.gz" | awk '{print $1}')
          echo "SHA256=${SHA256}" >> $GITHUB_ENV
          echo "TARBALL=${RELEASE_DIR}.tar.gz" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ env.TARBALL }}
          asset_name: ${{ env.TARBALL }}
          asset_content_type: application/gzip

      - name: Update Homebrew Formula
        run: |
          VERSION="${{ needs.create-release.outputs.version }}"
          
          # Update formula files with actual SHA256
          for formula in Formula/*.rb; do
            sed -i "s/PLACEHOLDER_SHA256/${SHA256}/g" "$formula"
            sed -i "s|archive/v[0-9.]*\.tar\.gz|archive/${VERSION}.tar.gz|g" "$formula"
            sed -i "s|version \"[0-9.]*\"|version \"${VERSION#v}\"|g" "$formula"
          done
          
          # Create formula artifact for homebrew tap
          tar -czf homebrew-formulas.tar.gz Formula/

      - name: Upload Homebrew Formulas
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./homebrew-formulas.tar.gz
          asset_name: homebrew-formulas.tar.gz
          asset_content_type: application/gzip

      - name: Generate SHA256 File
        run: |
          echo "${SHA256}  ${{ env.TARBALL }}" > SHA256SUMS.txt

      - name: Upload SHA256 File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./SHA256SUMS.txt
          asset_name: SHA256SUMS.txt
          asset_content_type: text/plain